{"version":3,"sources":["../../../shared/isomorphic/components/utility/layoutWrapper.style.js","../../../shared/isomorphic/components/utility/layoutWrapper.js","containers/Report/style.js","containers/Report/widgets-wrapper.js","containers/Report/shortWidget/style.js","containers/Report/shortWidget/sale-widget.js","containers/Report/longWidget/style.js","containers/Report/longWidget/sale-widget.js","settings/basicStyle.js","containers/Report/index.js"],"names":["LayoutContentWrapper","styled","div","props","className","children","WidgetWrapper","height","padding","palette","this","width","gutterTop","gutterRight","gutterBottom","gutterLeft","bgColor","wrapperStyle","marginTop","marginRight","marginBottom","marginLeft","backgroundColor","borderBottomLeftRadius","style","Component","SaleWidgetWrapper","options","data","chartType","title","loader","legendToggle","fontWeight","basicStyle","rowStyle","display","flexFlow","colStyle","gutter","Report","useState","loading1","setLoading1","loading2","setLoading2","loading3","setLoading3","loading4","setLoading4","loading5","setLoading5","loading6","setLoading6","turnaround","setTurnaround","perday","setPerday","approvedByPolicy","setApprovedByPolicy","approvedByValue","setApprovedByValue","claimCount","setClaimCount","usdApproved","setUsdApproved","usdRejected","setUsdRejected","moment","subtract","format","chartDate","setChartDate","dateGraph","setDateGraph","useEffect","SuperFetch","get","then","response","console","log","diff","status","average","reduce","acc","curr","updatedAt","createdAt","length","perDay","notification","error","message","catch","e","map","item","policyType","policyTypeCount","unshift","push","gt","lte","table","month","ApprovedCount","DeclinedCount","claim","sum","datePickerClaim","useRef","datePickerPending","alignItems","justifyContent","size","Title","type","justify","RangePicker","defaultValue","ref","onClick","param","current","picker","state","value","ws","XLSX","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","border","borderRadius","onChange","svgs","document","getElementsByClassName","index","html2canvas","canvas","link","createElement","href","toDataURL","download","click","lg","md","sm","xs","label","id","redFrom","redTo","yellowFrom","yellowTo","minorTicks","forceIFrame","chartArea","is3D","hAxis","minValue","vAxis","isStacked"],"mappings":"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","file":"static/js/18.8fe8e84a.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst LayoutContentWrapper = styled.div`\n  padding: 40px 20px;\n  display: flex;\n  flex-flow: column;\n  overflow: hidden;\n  @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n  }\n\n  @media (max-width: 580px) {\n    padding: 15px;\n  }\n`;\n\nexport { LayoutContentWrapper };\n","import React from 'react';\nimport { LayoutContentWrapper } from './layoutWrapper.style';\n\nexport default props => (\n  <LayoutContentWrapper\n    className={\n      props.className != null\n        ? `${props.className} isoLayoutContentWrapper`\n        : 'isoLayoutContentWrapper'\n    }\n    {...props}\n  >\n    {props.children}\n  </LayoutContentWrapper>\n);\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst WidgetWrapper = styled.div`\n  margin: 0 10px;\n\n  @media only screen and (max-width: 767) {\n    margin-right: 0 !important;\n  }\n`;\n\nconst WidgetBox = styled.div`\n  width: 100%;\n  height: ${props => (props.height ? `${props.height}px` : '100%')};\n  padding: ${props => (props.padding ? props.padding : '30px')};\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 2)};\n\n  canvas {\n    width: 100% !important;\n    height: 100% !important;\n  }\n`;\n\nconst WidgetColumn = styled.div`\n  align-content: flex-start;\n`;\n\nexport { WidgetWrapper, WidgetBox, WidgetColumn };\n","import React, { Component } from 'react';\nimport { WidgetWrapper } from './style';\n\nexport default class extends Component {\n  render() {\n    const {\n      width,\n      gutterTop,\n      gutterRight,\n      gutterBottom,\n      gutterLeft,\n      padding,\n      bgColor,\n      children,\n    } = this.props;\n    const wrapperStyle = {\n      width: width,\n      marginTop: gutterTop,\n      marginRight: gutterRight,\n      marginBottom: gutterBottom,\n      marginLeft: gutterLeft,\n      padding: padding,\n      backgroundColor: bgColor,\n      borderBottomLeftRadius: 30,\n    };\n\n    return (\n      <WidgetWrapper className=\"isoWidgetsWrapper\" style={wrapperStyle}>\n        {children}\n      </WidgetWrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst SaleWidgetWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n  background-color: #ffffff;\n  overflow: hidden;\n  border: 1px solid ${palette('border', 2)};\n  border-radius: 25px;\n  margin: auto;\n  text-align: center;\n\n  .footer {\n    padding: 0px;\n    height: 50px;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    background-image: url('/images/icons/footer.png');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    color: white;\n    text-align: center;\n    font-size: 150%;\n  }\n  .isoContent {\n  }\n`;\n\nexport { SaleWidgetWrapper };\n","import React, { Component } from 'react';\nimport { SaleWidgetWrapper } from './style';\nimport { Chart } from 'react-google-charts';\n\nexport default class extends Component {\n  render() {\n    const { options, data, chartType, title } = this.props;\n\n    return (\n      <SaleWidgetWrapper className=\"isoSaleWidget\">\n        <Chart\n          className=\"isoContent\"\n          height={300}\n          width={'100%'}\n          chartType={chartType}\n          loader={<div>Loading Chart</div>}\n          data={data}\n          options={options}\n          legendToggle\n        />\n        <div className=\"footer\">\n          <span style={{ fontWeight: 'bold' }}>{title}</span>\n        </div>\n      </SaleWidgetWrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst SaleWidgetWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  background-color: #ffffff;\n  overflow: hidden;\n  border: 1px solid ${palette('border', 2)};\n  border-radius: 25px;\n  .isoSaleLabel {\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.2;\n    text-transform: uppercase;\n    color: ${palette('text', 0)};\n    margin: 0 0 20px;\n  }\n\n  .isoSalePrice {\n    font-size: 28px;\n    font-weight: 300;\n    line-height: 1.2;\n    margin: 0 0 20px;\n  }\n\n  .isoSaleDetails {\n    font-size: 13px;\n    font-weight: 400;\n    line-height: 1.5;\n    color: ${palette('text', 2)};\n    margin: 0;\n  }\n`;\n\nexport { SaleWidgetWrapper };\n","import React, { Component } from 'react';\nimport { SaleWidgetWrapper } from './style';\nimport { Chart } from 'react-google-charts';\n\nexport default class extends Component {\n  render() {\n    const { options, data, chartType } = this.props;\n\n    return (\n      <SaleWidgetWrapper className=\"isoSaleWidget\">\n        <Chart\n          height={300}\n          chartType={chartType}\n          loader={<div>Loading Chart</div>}\n          data={data}\n          options={options}\n          legendToggle\n        />\n      </SaleWidgetWrapper>\n    );\n  }\n}\n","const rowStyle = {\n  width: '100%',\n  display: 'flex',\n  flexFlow: 'row wrap',\n  marginBottom: '16px',\n};\nconst colStyle = {\n  marginBottom: '16px',\n};\nconst gutter = 16;\nconst basicStyle = {\n  rowStyle,\n  colStyle,\n  gutter,\n};\n\nexport default basicStyle;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Row, Col, Divider, Typography, DatePicker, Button } from 'antd';\nimport IsoWidgetsWrapper from './widgets-wrapper';\nimport ShortWidget from './shortWidget/sale-widget';\nimport LongWidget from './longWidget/sale-widget';\nimport basicStyle from '../../settings/basicStyle';\nimport IntlMessages from '@isomorphic/shared/isomorphic/components/utility/intlMessages';\nimport SuperFetch from '../../helpers/superFetch';\nimport notification from '@isomorphic/shared/isomorphic/components/Notification';\nimport LayoutContentWrapper from '@isomorphic/shared/isomorphic/components/utility/layoutWrapper';\nimport moment from 'moment';\nimport XLSX from 'xlsx';\n//import * as saveSvgAsPng from 'save-svg-as-png';\nimport html2canvas from 'html2canvas';\nimport { Spin } from 'antd';\nexport default function Report() {\n  //well, I tryed to put all loading in one variable. To save time, just do it seperately. If you can, please put them together\n  //const [loading, setLoading] = useState(Array(7).fill(true));\n  const [loading1, setLoading1] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [loading3, setLoading3] = useState(true);\n  const [loading4, setLoading4] = useState(true);\n  const [loading5, setLoading5] = useState(true);\n  const [loading6, setLoading6] = useState(true);\n\n  const [turnaround, setTurnaround] = useState([]);\n  const [perday, setPerday] = useState([]);\n  const [approvedByPolicy, setApprovedByPolicy] = useState([]);\n  const [approvedByValue, setApprovedByValue] = useState([]);\n  const [claimCount, setClaimCount] = useState([]);\n  const [usdApproved, setUsdApproved] = useState([]);\n  const [usdRejected, setUsdRejected] = useState([]);\n  const [chartDate, setChartDate] = useState([\n    moment()\n      .subtract(2, 'years')\n      .format(),\n    moment().format(),\n  ]);\n  const [dateGraph, setDateGraph] = useState([\n    moment().subtract(2, 'years'),\n    moment(),\n  ]);\n  //turnaround perday\n  useEffect(() => {\n    setLoading1(true);\n    SuperFetch.get('report/turnaroundTime', chartDate)\n      .then(response => {\n        console.log(moment(chartDate[1]).diff(moment(chartDate[0]), 'days'));\n\n        if (response.status === 200) {\n          const average =\n            response.data.reduce(\n              (acc, curr) =>\n                (acc += moment(curr.updatedAt).diff(\n                  moment(curr.createdAt),\n                  'days'\n                )),\n              0\n            ) / response.data.length;\n          console.log(response.data.length);\n          const perDay =\n            response.data.length /\n            moment(chartDate[1]).diff(moment(chartDate[0]), 'days');\n\n          setTurnaround([\n            ['Label', 'Value'],\n            ['Turnaround', average],\n          ]);\n          setPerday([\n            ['Label', 'Value'],\n            ['Per Day', perDay],\n          ]);\n          setLoading1(false);\n        } else {\n          notification('error', response.error.message);\n        }\n      })\n      .catch(e => console.log(e));\n  }, [chartDate]);\n\n  //approved by policy\n  useEffect(() => {\n    setLoading2(true);\n    SuperFetch.get('report/approvedClaimedCountByType', chartDate)\n      .then(response => {\n        if (response.status === 200) {\n          const data = response.data.map(item => [\n            item.policyType,\n            item.policyTypeCount,\n          ]);\n          data.unshift(['Type', 'Count']);\n          setApprovedByPolicy(data);\n          setLoading2(false);\n        } else {\n          notification('error', 'Something wrong in retrieving CSV');\n        }\n      })\n      .catch(e => console.log(e));\n  }, [chartDate]);\n\n  //approved by value\n  useEffect(() => {\n    setLoading3(false);\n    SuperFetch.get('report/approvedClaimedCountByValue', chartDate)\n      .then(response => {\n        if (response.status === 200) {\n          console.log(response.data);\n\n          var data = [];\n          data.push(['Amount', 'Count']);\n          data.push(['greater then $250', response.data[0].gt]);\n          data.push(['less  or equal than $250', response.data[0].lte]);\n          setApprovedByValue(data);\n          setLoading3(false);\n        } else {\n          notification('error', 'Something wrong in retrieving CSV');\n        }\n      })\n      .catch(e => console.log(e));\n  }, [chartDate]);\n\n  //claim Count\n  useEffect(() => {\n    setLoading4(true);\n    SuperFetch.get('report/claimCount', chartDate)\n      .then(response => {\n        if (response.status === 200) {\n          var table = response.data.map(item => [\n            moment(item.month).format('MM-YYYY'),\n            item.ApprovedCount,\n            item.DeclinedCount,\n          ]);\n          table.unshift(['Month', 'Approved Count', 'Declined Count']);\n\n          setClaimCount(table);\n          setLoading4(false);\n        } else {\n          notification('error', 'Something wrong in retrieving CSV');\n        }\n      })\n      .catch(e => console.log(e));\n  }, [chartDate]);\n\n  //USD Approved\n  useEffect(() => {\n    setLoading5(true);\n    SuperFetch.get('report/USDApproved', chartDate)\n      .then(response => {\n        if (response.status === 200) {\n          var table = response.data.map(claim => {\n            return [moment(claim.month).format('MM-YYYY'), claim.sum];\n          });\n          table.unshift(['Month', 'USD total']);\n\n          setUsdApproved(table);\n          setLoading5(false);\n        } else {\n          notification('error', 'Something wrong in retrieving CSV');\n        }\n      })\n      .catch(e => console.log(e));\n  }, [chartDate]);\n\n  //USD rejected\n  useEffect(() => {\n    setLoading6(true);\n    SuperFetch.get('report/USDRejected', chartDate)\n      .then(response => {\n        if (response.status === 200) {\n          var table = response.data.map(claim => {\n            return [moment(claim.month).format('MM-YYYY'), claim.sum];\n          });\n          table.unshift(['Month', 'USD total']);\n\n          setUsdRejected(table);\n          setLoading6(false);\n        } else {\n          notification('error', 'Something wrong in retrieving CSV');\n        }\n      })\n      .catch(e => console.log(e));\n  }, [chartDate]);\n\n  const datePickerClaim = useRef(null);\n  const datePickerPending = useRef(null);\n  const onButtonClickChart = e => {\n    setChartDate(dateGraph.map(item => item.format()));\n  };\n  const onButtonClickClaim = () => {\n    //console.log(datePickerClaim.current.picker.state.value.map(item => item.format()));\n    let param = datePickerClaim.current.picker.state.value.map(item =>\n      item.format()\n    );\n    param.push('claims');\n    SuperFetch.get('report/csv', param)\n      .then(response => {\n        console.log('response', response);\n        if (response.status === 200) {\n          var ws = XLSX.utils.json_to_sheet(response.data);\n          var wb = XLSX.utils.book_new();\n          XLSX.utils.book_append_sheet(wb, ws, 'report');\n          XLSX.writeFile(wb, 'claims report.xlsb');\n          //console.log(response)\n        } else {\n          notification('error', 'Something wrong in retrieving CSV');\n        }\n      })\n      .catch(e => console.log(e));\n  };\n  const onButtonClickPending = () => {\n    let param = datePickerPending.current.picker.state.value.map(item =>\n      item.format()\n    );\n    param.push('pendings');\n    SuperFetch.get('report/csv', param)\n      .then(response => {\n        console.log('response', response);\n        if (response.status === 200) {\n          var ws = XLSX.utils.json_to_sheet(response.data);\n          var wb = XLSX.utils.book_new();\n          XLSX.utils.book_append_sheet(wb, ws, 'report');\n          XLSX.writeFile(wb, 'pendings report.xlsb');\n          //console.log(response)\n        } else {\n          notification('error', 'Something wrong in retrieving CSV');\n        }\n      })\n      .catch(e => console.log(e));\n  };\n\n  const onButtonClickImages = () => {\n    //const svgs = document.querySelectorAll(\"div[aria-label='A chart.']\");\n    const svgs = document.getElementsByClassName('isoSaleWidget');\n    for (let index = 0; index < svgs.length; index++) {\n      //saveSvgAsPng.saveSvgAsPng(svgs[index], 'chart.png')\n      html2canvas(svgs[index]).then(canvas => {\n        //document.body.appendChild(canvas)\n        // var reject = document.createElement('img'); //Create <a>\n        // console.log(canvas.toDataURL())\n        // reject.href = canvas.toDataURL(); //Image Base64 Goes here\n        // reject.download = 'chart.png'; //File name Here\n        // reject.click();\n        var link = document.createElement('a');\n        link.href = canvas.toDataURL();\n        link.download = 'chart.png';\n        link.click();\n      });\n    }\n  };\n  const onChangeHandlerGraph = e => {\n    setDateGraph(e);\n  };\n  const { rowStyle, colStyle } = basicStyle;\n  //console.log('heheheh',loading.some(e => e===true))\n  if (loading6 || loading5 || loading4 || loading3 || loading2 || loading1)\n    return (\n      <div\n        style={{\n          marginTop: '20%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Spin size=\"large\" />\n      </div>\n    );\n  return (\n    <LayoutContentWrapper>\n      <Row style={rowStyle}>\n        <Col>\n          <Typography.Title>Reporting</Typography.Title>\n        </Col>\n        <Divider />\n      </Row>\n      <Row style={rowStyle} type=\"flex\" justify=\"space-around\">\n        <Col>\n          <DatePicker.RangePicker\n            defaultValue={[moment().subtract(1, 'months'), moment()]}\n            format={'DD MMM YYYY'}\n            ref={datePickerClaim}\n          />\n\n          <Button type=\"primary\" onClick={onButtonClickClaim}>\n            EXPORT MONTHLY REPORT\n          </Button>\n        </Col>\n        <Col>\n          <DatePicker.RangePicker\n            defaultValue={[moment().subtract(1, 'months'), moment()]}\n            format={'DD MMM YYYY'}\n            ref={datePickerPending}\n          />\n\n          <Button type=\"primary\" onClick={onButtonClickPending}>\n            EXPORT CURRENT PENDING REPORT\n          </Button>\n        </Col>\n      </Row>\n      <div\n        style={{\n          border: '1px solid white',\n          padding: '35px',\n          borderRadius: '25px',\n        }}\n      >\n        <Row style={rowStyle} type=\"flex\" justify=\"space-around\">\n          <Col>\n            <DatePicker.RangePicker\n              format={'DD MMM YYYY'}\n              value={dateGraph}\n              onChange={onChangeHandlerGraph}\n            />\n\n            <Button type=\"primary\" onClick={onButtonClickChart}>\n              Submit\n            </Button>\n          </Col>\n          <Col>\n            <Button type=\"primary\" onClick={onButtonClickImages}>\n              DOWNLOAD IMAGES\n            </Button>\n          </Col>\n        </Row>\n        <Row style={rowStyle} gutter={0} justify=\"start\">\n          <Col lg={6} md={12} sm={12} xs={24} style={colStyle}>\n            <IsoWidgetsWrapper gutterLeft={0}>\n              {/* Sale Widget */}\n              <ShortWidget\n                data={turnaround}\n                chartType=\"Gauge\"\n                label={<IntlMessages id=\"widget.salewidget1.label\" />}\n                title={'TURNAROUND'}\n                options={{\n                  title: 'turnaround',\n                  redFrom: 90,\n                  redTo: 100,\n                  yellowFrom: 75,\n                  yellowTo: 90,\n                  minorTicks: 5,\n                  forceIFrame: true,\n                }}\n              />\n            </IsoWidgetsWrapper>\n          </Col>\n\n          <Col lg={6} md={12} sm={12} xs={24} style={colStyle}>\n            <IsoWidgetsWrapper>\n              {/* Sale Widget */}\n              <ShortWidget\n                title={'PROCESSED PER DAY'}\n                data={perday}\n                chartType=\"Gauge\"\n                label={<IntlMessages id=\"widget.salewidget1.label\" />}\n                options={{\n                  title: 'Per Day',\n                  redFrom: 90,\n                  redTo: 100,\n                  yellowFrom: 75,\n                  yellowTo: 90,\n                  minorTicks: 5,\n                }}\n              />\n            </IsoWidgetsWrapper>\n          </Col>\n\n          <Col lg={6} md={12} sm={12} xs={24} style={colStyle}>\n            <IsoWidgetsWrapper>\n              {/* Sale Widget */}\n              <ShortWidget\n                title={'APPROVED BY POLICY'}\n                data={approvedByPolicy}\n                chartType=\"PieChart\"\n                options={{\n                  title: 'Approved Claims Count: Split by Type',\n                  chartArea: { width: '80%' },\n                  // Just add this option\n                  is3D: false,\n                }}\n              />\n            </IsoWidgetsWrapper>\n          </Col>\n          <Col lg={6} md={12} sm={12} xs={24} style={colStyle}>\n            <IsoWidgetsWrapper>\n              {/* Sale Widget */}\n              <ShortWidget\n                title={'APPROVED BY VALUE'}\n                data={approvedByValue}\n                chartType=\"PieChart\"\n                options={{\n                  chartArea: { width: '80%' },\n                  title: 'Approved Claims Count: Split by Value',\n                  // Just add this option\n                  is3D: false,\n                }}\n              />\n            </IsoWidgetsWrapper>\n          </Col>\n        </Row>\n        <Row style={rowStyle}>\n          {/* Sale Widget */}\n          <LongWidget\n            data={claimCount}\n            chartType=\"ColumnChart\"\n            options={{\n              title: 'Claims Count',\n              chartArea: { width: '80%' },\n              hAxis: {\n                title: 'Month',\n                minValue: 0,\n              },\n              vAxis: {\n                title: 'Count',\n              },\n            }}\n          />\n        </Row>\n        <Row style={rowStyle}>\n          {/* Sale Widget */}\n          <LongWidget\n            data={usdApproved}\n            chartType=\"ColumnChart\"\n            options={{\n              isStacked: true,\n              title: 'USD Approved',\n              chartArea: { width: '80%' },\n              hAxis: {\n                title: 'Month',\n                minValue: 0,\n              },\n              vAxis: {\n                title: 'Amount',\n                minValue: 0,\n              },\n            }}\n          />\n        </Row>\n        <Row style={rowStyle}>\n          {/* Sale Widget */}\n          <LongWidget\n            data={usdRejected}\n            chartType=\"ColumnChart\"\n            options={{\n              title: 'USD Reject',\n              chartArea: { width: '80%' },\n              hAxis: {\n                title: 'Month',\n                minValue: 0,\n              },\n              vAxis: {\n                title: 'Amount',\n                minValue: 0,\n              },\n            }}\n          />\n        </Row>\n      </div>\n    </LayoutContentWrapper>\n  );\n}\n"],"sourceRoot":""}