{"version":3,"sources":["../../../shared/Library/withDirection.js","../../../shared/Library/style-util.js","../../../shared/isomorphic/components/uielements/styles/button.style.js","../../../shared/isomorphic/components/uielements/button.js","../../../shared/isomorphic/components/utility/layoutWrapper.style.js","../../../shared/isomorphic/components/utility/layoutWrapper.js","../../../shared/isomorphic/components/uielements/form.js","containers/Setting/Profile/index.js","containers/Setting/Settings/index.js","containers/Setting/Password/index.js","containers/Setting/index.js"],"names":["rtl","process","browser","document","getElementsByTagName","getAttribute","withDirection","Component","props","data-rtl","transition","timing","borderRadius","radius","boxShadow","shadow","ComponentName","AntButton","styled","palette","isoButton","WithDirection","AntButtonGroup","ButtonsGroup","Group","LayoutContentWrapper","div","className","children","FormItem","Form","Item","WrappedProfile","create","mapPropsToFields","firstName","createFormField","value","user","lastName","userName","email","getFieldDecorator","form","type","justify","span","onSubmit","e","preventDefault","validateFieldsAndScroll","err","values","SuperFetch","put","id","then","response","console","log","label","rules","required","message","name","size","placeholder","style","marginRight","htmlType","WrappedSettings","accountantEmail","settings","forwardEmail","paymentPassword","modifiedBy","status","notification","exchangeRateDate","useState","isVerified","setIsVerified","newPassword","post","username","data","error","setFields","password","errors","Error","token","hasFeedback","validator","rule","callback","Password","connect","state","isLoggedIn","Auth","idToken","setUser","setSettings","setExchangeRateDate","useEffect","a","get","userRes","settingsRes","exchangeRateDateRes","moment","date","format","fetchData","height","defaultActiveKey","onChange","tabPosition","TabPane","tab","key"],"mappings":"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","file":"static/js/23.be83c90b.chunk.js","sourcesContent":["import React from 'react';\n\nexport const rtl =\n  process.browser &&\n  document.getElementsByTagName('html')[0].getAttribute('dir');\n\nconst withDirection = Component => props => (\n  <Component {...props} data-rtl={rtl} />\n);\n\nexport default withDirection;\n","// Transition\nexport function transition(timing = 0.3) {\n  return `\n      -webkit-transition: all ${timing}s cubic-bezier(0.215, 0.61, 0.355, 1);\n      -moz-transition: all ${timing}s cubic-bezier(0.215, 0.61, 0.355, 1);\n      -ms-transition: all ${timing}s cubic-bezier(0.215, 0.61, 0.355, 1);\n      -o-transition: all ${timing}s cubic-bezier(0.215, 0.61, 0.355, 1);\n      transition: all ${timing}s cubic-bezier(0.215, 0.61, 0.355, 1);\n  `;\n}\n\n// Border Radius\nexport function borderRadius(radius = 0) {\n  return `\n      -webkit-border-radius: ${radius};\n      -moz-border-radius: ${radius};\n      -ms-transition: ${radius};\n      -o-border-radius: ${radius};\n      border-radius: ${radius};\n  `;\n}\n\n// Box Shadow\nexport function boxShadow(shadow = 'none') {\n  return `\n      -webkit-box-shadow: ${shadow};\n      -moz-box-shadow: ${shadow};\n      box-shadow: ${shadow};\n  `;\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { transition } from '../../../../Library/style-util';\n\nconst Buttons = ComponentName => styled(ComponentName)`\n  &.ant-btn {\n    display: inline-block;\n    margin-bottom: 0;\n    font-weight: 500;\n    text-align: center;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    cursor: pointer;\n    background-image: none;\n    border: 1px solid transparent;\n    white-space: nowrap;\n    line-height: 1.5;\n    padding: 0 25px;\n    font-size: 14px;\n    border-radius: 4px;\n    height: 36px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    position: relative;\n    color: ${palette('text', 1)};\n    border-color: ${palette('border', 0)};\n    ${transition()};\n\n    &:hover {\n      border-color: ${palette('primary', 0)};\n      color: ${palette('primary', 0)};\n    }\n\n    > .anticon + span,\n    > span + .anticon {\n      margin: ${props =>\n        props['data-rtl'] === 'rtl' ? '0 0.5em 0 0' : '0 0 0 0.5em'};\n    }\n\n    .anticon-right {\n      transform: ${props =>\n        props['data-rtl'] === 'rtl' ? 'rotate(180deg)' : 'rotate(0)'};\n    }\n\n    .anticon-left {\n      transform: ${props =>\n        props['data-rtl'] === 'rtl' ? 'rotate(180deg)' : 'rotate(0)'};\n    }\n\n    &.ant-btn-primary {\n      background-color: ${palette('primary', 0)};\n      border-color: ${palette('primary', 0)};\n\n      &:hover {\n        background-color: ${palette('primary', 10)};\n        border-color: ${palette('primary', 10)};\n        color: #fff;\n      }\n    }\n\n    &.ant-btn-sm {\n      padding: 0 15px;\n      height: 28px;\n      font-size: 12px;\n\n      &.ant-btn-loading:not(.ant-btn-circle):not(.ant-btn-circle-outline) {\n        padding: ${props =>\n          props['data-rtl'] === 'rtl' ? '0 24px 0 15px' : '0 15px 0 24px'};\n        .anticon {\n          margin: ${props =>\n            props['data-rtl'] === 'rtl' ? '0 -17px 0 0' : '0 0 0 -17px'};\n        }\n      }\n    }\n\n    &.ant-btn-lg {\n      padding: 0 35px;\n      font-size: 14px;\n      height: 42px;\n    }\n\n    &.ant-btn-primary {\n      color: #ffffff;\n    }\n\n    &.ant-btn-dashed {\n      border-style: dashed;\n      border-color: ${palette('border', 1)};\n\n      &:hover {\n        color: ${palette('primary', 0)};\n        border-color: ${palette('primary', 0)};\n      }\n    }\n\n    &.ant-btn-danger {\n      background-color: ${palette('error', 0)};\n      border-color: ${palette('error', 0)};\n      color: #ffffff;\n\n      &:hover {\n        background-color: ${palette('error', 2)};\n        border-color: ${palette('error', 2)};\n      }\n\n      &.ant-btn-background-ghost {\n        color: ${palette('error', 0)};\n        background-color: transparent;\n        border-color: ${palette('error', 0)};\n\n        &:hover {\n          color: ${palette('error', 2)};\n          border-color: ${palette('error', 2)};\n        }\n      }\n    }\n\n    &.ant-btn-circle,\n    &.ant-btn-circle-outline {\n      width: 35px;\n      padding: 0;\n      font-size: 14px;\n      border-radius: 50%;\n      height: 35px;\n\n      &.ant-btn-sm {\n        padding: 0;\n        height: 28px;\n        width: 28px;\n        font-size: 12px;\n      }\n\n      &.ant-btn-lg {\n        padding: 0;\n        font-size: 14px;\n        height: 42px;\n        width: 42px;\n      }\n    }\n\n    &.ant-btn.disabled,\n    &.ant-btn[disabled],\n    &.ant-btn.disabled:hover,\n    &.ant-btn[disabled]:hover,\n    &.ant-btn.disabled:focus,\n    &.ant-btn[disabled]:focus,\n    &.ant-btn.disabled:active,\n    &.ant-btn[disabled]:active,\n    &.ant-btn.disabled.active,\n    &.ant-btn[disabled].active {\n      color: ${palette('grayscale', 2)};\n      background-color: #f7f7f7;\n      border-color: ${palette('border', 0)};\n      cursor: not-allowed;\n    }\n\n    &.ant-btn-loading:not(.ant-btn-circle):not(.ant-btn-circle-outline)\n      .anticon {\n      margin: ${props =>\n        props['data-rtl'] === 'rtl' ? '0 -14px 0 0' : '0 0 0 -14px'};\n    }\n\n    &.isoButton {\n      display: inline-block;\n      margin-bottom: 0;\n      font-weight: 500;\n      text-align: center;\n      -ms-touch-action: manipulation;\n      touch-action: manipulation;\n      cursor: pointer;\n      background-image: none;\n      border: 0;\n      white-space: nowrap;\n      line-height: 1.5;\n      padding: 0 25px;\n      font-size: 13px;\n      border-radius: 4px;\n      height: 35px;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n      position: relative;\n      color: #ffffff;\n      background-color: ${palette('primary', 0)};\n      ${transition()};\n\n      &:hover {\n        background-color: ${palette('primary', 2)};\n      }\n\n      &.isoBtnSm {\n        padding: 0 15px;\n        height: 28px;\n        font-size: 12px;\n      }\n\n      &.isoBtnLg {\n        padding: 0 35px;\n        font-size: 14px;\n        height: 42px;\n      }\n    }\n  }\n\n  + .ant-btn-group {\n    margin-left: ${props =>\n      props['data-rtl'] === 'rtl' ? '0' : '-1px'} !important;\n    margin-right: ${props =>\n      props['data-rtl'] === 'rtl' ? '-1px' : '0'} !important;\n  }\n`;\n\nconst RadioButtons = ComponentName => styled(ComponentName)`\n  .ant-radio-button-wrapper {\n    height: 35px;\n    line-height: 33px;\n    color: ${palette('text', 1)};\n    border: 1px solid ${palette('border', 0)};\n    border-left: 0;\n    background: #fff;\n    padding: 0 20px;\n\n    &:hover,\n    &.ant-radio-button-wrapper-focused {\n      color: ${palette('primary', 0)};\n    }\n\n    &.ant-radio-button-wrapper-checked {\n      background: #fff;\n      border-color: ${palette('primary', 0)};\n      color: ${palette('primary', 0)};\n      box-shadow: -1px 0 0 0 ${palette('primary', 0)};\n    }\n  }\n`;\n\nconst ButtonsGroup = ComponentName => styled(ComponentName)`\n  &.ant-btn-group {\n    .ant-btn {\n      margin: 0;\n      margin-right: 0;\n      display: inline-block;\n      margin-bottom: 0;\n      font-weight: 500;\n      text-align: center;\n      -ms-touch-action: manipulation;\n      touch-action: manipulation;\n      cursor: pointer;\n      background-image: none;\n      border: 1px solid transparent;\n      border-color: ${palette('border', 1)};\n      white-space: nowrap;\n      line-height: 1.5;\n      padding: 0 8px;\n      font-size: 14px;\n      border-radius: 0;\n      height: 36px;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n      position: relative;\n      ${transition()};\n\n      &:hover {\n        border-color: ${palette('primary', 0)};\n      }\n\n      &.ant-btn-dashed {\n        border-style: dashed;\n\n        &:hover {\n          border-color: ${palette('primary', 0)};\n        }\n      }\n\n      &.ant-btn-primary {\n        border-color: ${palette('primary', 0)};\n\n        &:hover {\n          border-color: ${palette('primary', 10)};\n        }\n      }\n    }\n\n    > .ant-btn:first-child:not(:last-child) {\n      border-radius: ${props =>\n        props['data-rtl'] === 'rtl' ? '0 4px 4px 0' : '4px 0 0 4px'};\n    }\n\n    > .ant-btn:last-child:not(:first-child) {\n      border-radius: ${props =>\n        props['data-rtl'] === 'rtl' ? '4px 0 0 4px' : '0 4px 4px 0'};\n    }\n\n    .ant-btn-primary:last-child:not(:first-child),\n    .ant-btn-primary + .ant-btn-primary {\n      border-left-color: ${props =>\n        props['data-rtl'] === 'rtl'\n          ? palette('primary', 0)\n          : palette('primary', 2)};\n      border-right-color: ${props =>\n        props['data-rtl'] === 'rtl'\n          ? palette('primary', 2)\n          : palette('primary', 0)};\n    }\n\n    .ant-btn-primary:first-child:not(:last-child) {\n      border-left-color: ${props =>\n        props['data-rtl'] === 'rtl'\n          ? palette('primary', 2)\n          : palette('primary', 0)};\n      border-right-color: ${props =>\n        props['data-rtl'] === 'rtl'\n          ? palette('primary', 0)\n          : palette('primary', 2)};\n    }\n\n    .ant-btn + .ant-btn,\n    + .ant-btn {\n      margin-left: ${props =>\n        props['data-rtl'] === 'rtl' ? '0' : '-1px'} !important;\n      margin-right: ${props =>\n        props['data-rtl'] === 'rtl' ? '-1px' : '0'} !important;\n    }\n\n    &.ant-btn-group-lg {\n      > .ant-btn {\n        padding: 0 35px;\n        font-size: 14px;\n        height: 42px;\n      }\n    }\n\n    &.ant-btn-group-sm {\n      > .ant-btn {\n        padding: 0 15px;\n        height: 28px;\n        font-size: 12px;\n      }\n    }\n  }\n\n  &.ant-btn-group + &.ant-btn-group {\n    margin-left: ${props =>\n      props['data-rtl'] === 'rtl' ? '0' : '-1px'} !important;\n    margin-right: ${props =>\n      props['data-rtl'] === 'rtl' ? '-1px' : '0'} !important;\n  }\n`;\n\nconst GhostButtons = ComponentName => styled(ComponentName)`\n  .ant-btn-background-ghost {\n    background: transparent !important;\n    border-color: #fff;\n    color: #fff;\n\n    &.ant-btn-primary {\n      color: ${palette('primary', 0)};\n      background-color: transparent;\n      border-color: ${palette('primary', 0)};\n    }\n  }\n`;\n\nexport { Buttons, ButtonsGroup, RadioButtons, GhostButtons };\n","import { Button } from 'antd';\nimport { Buttons, ButtonsGroup } from './styles/button.style';\nimport WithDirection from '../../../Library/withDirection';\n\nconst AntButton = Buttons(Button);\nconst isoButton = WithDirection(AntButton);\nconst AntButtonGroup = ButtonsGroup(Button.Group);\nconst ButtonGroup = WithDirection(AntButtonGroup);\n\nexport default isoButton;\nexport { ButtonGroup };\n","import styled from 'styled-components';\r\n\r\nconst LayoutContentWrapper = styled.div`\r\n  padding: 40px 20px;\r\n  display: flex;\r\n  flex-flow: column;\r\n  overflow: hidden;\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 50px 20px;\r\n  }\r\n\r\n  @media (max-width: 580px) {\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nexport { LayoutContentWrapper };\r\n","import React from 'react';\nimport { LayoutContentWrapper } from './layoutWrapper.style';\n\nexport default props => (\n  <LayoutContentWrapper\n    className={\n      props.className != null\n        ? `${props.className} isoLayoutContentWrapper`\n        : 'isoLayoutContentWrapper'\n    }\n    {...props}\n  >\n    {props.children}\n  </LayoutContentWrapper>\n);\n","import { Form } from 'antd';\n\nexport default Form;\n","import React from 'react';\r\nimport { Input, Row, Col } from 'antd';\r\nimport Button from '@isomorphic/shared/isomorphic/components/uielements/button';\r\nimport Form from '@isomorphic/shared/isomorphic/components/uielements/form';\r\nimport SuperFetch from '../../../helpers/superFetch';\r\nconst FormItem = Form.Item;\r\nfunction Profile(props) {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const { getFieldDecorator } = props.form;\r\n  const handleSave = e => {\r\n    e.preventDefault();\r\n\r\n    props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        SuperFetch.put('users/user', { id: props.user.id, ...values }).then(\r\n          response => {\r\n            console.log(response);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Row type=\"flex\" justify=\"center\">\r\n      <Col span={12}>\r\n        <Form className=\"isoSignUpForm\" onSubmit={handleSave}>\r\n          <Row type=\"flex\" justify=\"space-between\">\r\n            <Col span={11}>\r\n              <FormItem label={<span>First Name:</span>}>\r\n                {getFieldDecorator('firstName', {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input your First Name!',\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                    id=\"inputFirstName\"\r\n                    name=\"inputFirstName\"\r\n                    size=\"large\"\r\n                    placeholder=\"First name\"\r\n                    style={{ marginRight: 0 }}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col span={11}>\r\n              <FormItem label={<span>Last Name:</span>}>\r\n                {getFieldDecorator('lastName', {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input your Last Name!',\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                    id=\"inputLastName\"\r\n                    name=\"inputLastName\"\r\n                    size=\"large\"\r\n                    placeholder=\"Last name\"\r\n                    style={{ marginRight: 0 }}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n          </Row>\r\n\r\n          <FormItem label={<span>User Name:</span>}>\r\n            {getFieldDecorator('userName', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your User Name!',\r\n                },\r\n              ],\r\n            })(\r\n              <Input\r\n                id=\"inputUserName\"\r\n                name=\"inputUserName\"\r\n                size=\"large\"\r\n                placeholder=\"User name\"\r\n              />\r\n            )}\r\n          </FormItem>\r\n          <FormItem label={<span>Email:</span>}>\r\n            {getFieldDecorator('email', {\r\n              rules: [\r\n                {\r\n                  type: 'email',\r\n                  message: 'The input is not valid E-mail!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your User Email!',\r\n                },\r\n              ],\r\n            })(\r\n              <Input id=\"email\" name=\"email\" size=\"large\" placeholder=\"Email\" />\r\n            )}\r\n          </FormItem>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            SAVE\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nconst WrappedProfile = Form.create({\r\n  mapPropsToFields(props) {\r\n    return {\r\n      firstName: Form.createFormField({\r\n        ...props.firstName,\r\n        value: props.user.firstName,\r\n      }),\r\n      lastName: Form.createFormField({\r\n        ...props.lastName,\r\n        value: props.user.lastName,\r\n      }),\r\n      userName: Form.createFormField({\r\n        ...props.userName,\r\n        value: props.user.userName,\r\n      }),\r\n      email: Form.createFormField({\r\n        ...props.email,\r\n        value: props.user.email,\r\n      }),\r\n    };\r\n  },\r\n})(Profile);\r\n\r\nexport default WrappedProfile;\r\n","import React from 'react';\r\nimport { Input, Row, Col } from 'antd';\r\nimport Button from '@isomorphic/shared/isomorphic/components/uielements/button';\r\nimport Form from '@isomorphic/shared/isomorphic/components/uielements/form';\r\nimport SuperFetch from '../../../helpers/superFetch';\r\nimport notification from '@isomorphic/shared/isomorphic/components/Notification';\r\nconst FormItem = Form.Item;\r\nfunction Settings(props) {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const { getFieldDecorator } = props.form;\r\n  const handleSave = e => {\r\n    e.preventDefault();\r\n\r\n    props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        values.modifiedBy = props.user.id;\r\n        SuperFetch.put('users/settings', values).then(response => {\r\n          if (response.status === 200) {\r\n            notification('success', 'Setting Updated');\r\n          } else {\r\n            notification('error', 'something goes wrong');\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row type=\"flex\" justify=\"center\">\r\n      <Col span={12}>\r\n        <Form className=\"isoSignUpForm\" onSubmit={handleSave}>\r\n          <FormItem label={<span>Accountant Email:</span>}>\r\n            {getFieldDecorator('accountantEmail', {\r\n              rules: [\r\n                {\r\n                  type: 'email',\r\n                  message: 'The input is not valid E-mail!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your User Email!',\r\n                },\r\n              ],\r\n            })(\r\n              <Input\r\n                id=\"inputUserName\"\r\n                name=\"inputUserName\"\r\n                size=\"large\"\r\n                placeholder=\"Accountant Email\"\r\n              />\r\n            )}\r\n          </FormItem>\r\n          <FormItem label={<span>Forward Email:</span>}>\r\n            {getFieldDecorator('forwardEmail', {\r\n              rules: [\r\n                {\r\n                  type: 'email',\r\n                  message: 'The input is not valid E-mail!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your Forward Email!',\r\n                },\r\n              ],\r\n            })(\r\n              <Input\r\n                id=\"inputUserName\"\r\n                name=\"inputUserName\"\r\n                size=\"large\"\r\n                placeholder=\"Accountant Email\"\r\n              />\r\n            )}\r\n          </FormItem>\r\n          <FormItem label={<span>Payment Report Password:</span>}>\r\n            {getFieldDecorator('paymentPassword', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input the payment Password!',\r\n                },\r\n              ],\r\n            })(\r\n              <Input\r\n                id=\"paymentPassword\"\r\n                name=\"paymentPassword\"\r\n                size=\"large\"\r\n                placeholder=\"Payment Password\"\r\n              />\r\n            )}\r\n          </FormItem>\r\n          <FormItem label={<span>ExchangeRate Update Date:</span>}>\r\n            <span>{props.exchangeRateDate}</span>\r\n          </FormItem>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            SAVE\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nconst WrappedSettings = Form.create({\r\n  mapPropsToFields(props) {\r\n    return {\r\n      accountantEmail: Form.createFormField({\r\n        ...props.accountantEmail,\r\n        value: props.settings.accountantEmail,\r\n      }),\r\n      forwardEmail: Form.createFormField({\r\n        ...props.forwardEmail,\r\n        value: props.settings.forwardEmail,\r\n      }),\r\n      paymentPassword: Form.createFormField({\r\n        ...props.paymentPassword,\r\n        value: props.settings.paymentPassword,\r\n      }),\r\n    };\r\n  },\r\n})(Settings);\r\n\r\nexport default WrappedSettings;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input, Row, Col } from 'antd';\r\nimport Button from '@isomorphic/shared/isomorphic/components/uielements/button';\r\nimport Form from '@isomorphic/shared/isomorphic/components/uielements/form';\r\nimport SuperFetch from '../../../helpers/superFetch';\r\nimport notification from '@isomorphic/shared/isomorphic/components/Notification';\r\nconst FormItem = Form.Item;\r\nfunction Profile(props) {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const { getFieldDecorator } = props.form;\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const handleSave = e => {\r\n    e.preventDefault();\r\n    props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        if (isVerified) {\r\n          SuperFetch.put('users/user', {\r\n            id: props.user.id,\r\n            newPassword: values.newPassword,\r\n          }).then(response => {\r\n            if (response.status === 200) {\r\n              notification('success', 'Password Updated');\r\n            } else {\r\n              notification('error', 'something goes wrong');\r\n            }\r\n          });\r\n        } else {\r\n          SuperFetch.post('login', {\r\n            username: props.user.userName,\r\n            ...values,\r\n          }).then(response => {\r\n            console.log(response.data);\r\n            if (response.data.error)\r\n              props.form.setFields({\r\n                password: { errors: [new Error(response.data.error)] },\r\n              });\r\n            else if (response.data.token) {\r\n              setIsVerified(true);\r\n            } else {\r\n              notification('error', 'something goes wrong');\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const validatePassword = (rule, value, callback) => {\r\n    callback();\r\n  };\r\n  return (\r\n    <Row type=\"flex\" justify=\"center\">\r\n      <Col span={12}>\r\n        <Form className=\"isoSignUpForm\" onSubmit={handleSave}>\r\n          <FormItem hasFeedback label={<span>Old password:</span>}>\r\n            {getFieldDecorator('password', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n                {\r\n                  validator: validatePassword,\r\n                },\r\n              ],\r\n            })(\r\n              <Input.Password\r\n                id=\"password\"\r\n                name=\"password\"\r\n                size=\"large\"\r\n                placeholder=\"Password\"\r\n              />\r\n            )}\r\n          </FormItem>\r\n          {isVerified ? (\r\n            <FormItem hasFeedback label={<span>Old password:</span>}>\r\n              {getFieldDecorator('newPassword', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your password!',\r\n                  },\r\n                ],\r\n              })(\r\n                <Input.Password\r\n                  id=\"newPassword\"\r\n                  name=\"password\"\r\n                  size=\"large\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              )}\r\n            </FormItem>\r\n          ) : null}\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            {isVerified ? 'Update' : 'Verify'}\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nconst WrappedProfile = Form.create()(Profile);\r\n\r\nexport default connect(\r\n  state => ({\r\n    isLoggedIn: state.Auth.idToken !== null ? true : false,\r\n  }),\r\n  {}\r\n)(WrappedProfile);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Tabs } from 'antd';\r\nimport LayoutContentWrapper from '@isomorphic/shared/isomorphic/components/utility/layoutWrapper';\r\nimport Profile from './Profile';\r\nimport Settings from './Settings';\r\nimport Password from './Password';\r\nimport SuperFetch from '../../helpers/superFetch';\r\nimport moment from 'moment';\r\nfunction Setting(props) {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [user, setUser] = useState({});\r\n  const [settings, setSettings] = useState({});\r\n  const [exchangeRateDate, setExchangeRateDate] = useState(null);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let userRes = await SuperFetch.get('users/user', {\r\n        idToken: props.idToken,\r\n      });\r\n      let settingsRes = await SuperFetch.get('users/settings');\r\n      let exchangeRateDateRes = await SuperFetch.get('users/exchangeRateDate');\r\n      setUser(userRes.data);\r\n      setSettings(settingsRes.data);\r\n      setExchangeRateDate(\r\n        moment(exchangeRateDateRes.data.date).format('DD MMM YYYY')\r\n      );\r\n    };\r\n    fetchData();\r\n  }, [props.idToken]);\r\n  const callback = e => {\r\n    //console.log(e)\r\n  };\r\n  return (\r\n    <LayoutContentWrapper style={{ height: '100vh' }}>\r\n      <Tabs\r\n        defaultActiveKey=\"1\"\r\n        onChange={callback}\r\n        tabPosition={'left'}\r\n        type=\"card\"\r\n        style={{ height: '100vh' }}\r\n      >\r\n        <Tabs.TabPane tab=\"Profile\" key=\"1\">\r\n          <Profile user={user} />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane tab=\"Password\" key=\"2\">\r\n          <Password user={user} />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane tab=\"Public Settings\" key=\"3\">\r\n          <Settings\r\n            settings={settings}\r\n            exchangeRateDate={exchangeRateDate}\r\n            user={user}\r\n          />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane tab=\"Others\" key=\"4\">\r\n          Others\r\n        </Tabs.TabPane>\r\n      </Tabs>\r\n    </LayoutContentWrapper>\r\n  );\r\n}\r\n\r\nexport default connect(state => {\r\n  return { idToken: state.Auth.idToken };\r\n}, {})(Setting);\r\n"],"sourceRoot":""}